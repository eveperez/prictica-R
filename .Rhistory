typeof(numero)
as.character(numero)
as.character(numero)
numero<-as.integer(numero)
numero<-25
numero<-as.integerer(numero)
numero<-as.integer(numero)
numeroFloat<- 25.56
suma<- num1 + as.numeric(num2)
num1 = 23.4
num2 = "15"
print(num1 + num2)
suma <- num1 + as.numeric(num2)
suma
num2 <- as.numeric(num2)
logico <-78
class(num2)
NA + 5
NA**3
?NA
x<-4
y<-2
(x == 4 | y == 20)
(x == 4 & y == 20)
!y == 2
isTRUE(y == 5)
is.vector(caracter)
caracter<-"456"
is.vector(caracter)
length(caracter)#muestra la longitud de un vector
mi_vector <- c(2, 3, 6, 7, 8, 10, 11)
print(mi_vector)
is.vector(mi_vector)
length(mi_vector)
mi_vector + 2
mi_vector * 2
mi_vector %% 2
mi_vector / 2
matrix(5:10) #creacion de una matriz
matriz3 <-matrix( nrow = 3, ncol = 4)
matriz3
matrix(1:36, nrow = 3, ncol = 12)
vector_1 <- 1:4
vector_2 <- 5:8
vector_3 <- 9:12
vector_4 <- 13:16
matriz <- rbind(vector_1, vector_2, vector_3, vector_4)
matriz
matriz2 <- cbind(vector_1, vector_2, vector_3, vector_4)
matriz2
class(matriz2)
matriz3 <-matrix(1:12, nrow = 3, ncol = 4)#crea matriz3
matriz3
matriz3[2,3]
matriz3[3,]   #muestre el renglon 3
matriz3[,3]   #muestre el columna 3
matriz3[1, 3:4]
matriz3[2, 2:3]
matriz3[, ]
length(ncol)
matriz3[3, 2:length(ncol)]#????
matriz3[3, 2:1]
matriz3[3, 3:2]#????
matrix<-matriz4(1:45, nrow = 9, ncol= 5)
matriz4<-matrix(1:45, nrow = 9, ncol= 5)
matriz4
matriz4[2:3,1:4]
matriz4[1:9,4]
matriz4[3:5,3:5]
matriz4[6:8,2:3]
matriz4[9:3:5]
matriz4[9,3:5]
a <- c(4, 6, 8, 10)
b <- c(3, 5, 7, 9)
d<-c(a,b) #crea un vector a partir de 2 vectores ya creados
d
matriz4
matriz4[matriz4>14]
which(matriz3 !=4 & matriz3 <= 6)
which(matriz4 !=4 & matriz4 <= 6)
?which
x <-c("a", 34, "c", 34)
x
mi_df <- data.frame(
"entero" = 1:4,
"factor" = c("a", "b", "c", "d"),
"numero" = c(1.2, 3.4, 4.5, 5.6),
"cadena" = as.character(c("a", "b", "c", "d"))
)
mi_df
View(matriz)
dim(mi_df) #dimensiones del df
length(mi_df) ## El largo de un data frame es igual a su nÃºmero de columnas
names(mi_df) # names() nos permite ver los nombres de las columnas
class(mi_df) # La clase de un data frame es data.frame
mi_df <- data.frame(
"entero" = 1:4,
"factor" = c("a", "b", "c", "d"),
"numero" = c(1.2, 3.4, 4.5, 5.6),
"cadena" = as.character(c("a", "b", "c", "d"))
"valor" = matriz(1:4)
mi_df <- data.frame(
"entero" = 1:4,
"factor" = c("a", "b", "c", "d"),
"numero" = c(1.2, 3.4, 4.5, 5.6),
"cadena" = as.character(c("a", "b", "c", "d"))
"valor" = matriz(1:4,)
mi_df <- data.frame(
"entero" = 1:4,
"factor" = c("a", "b", "c", "d"),
"numero" = c(1.2, 3.4, 4.5, 5.6),
"cadena" = as.character(c("a", "b", "c", "d")),
"valor" = matriz(1:4)
)
mi_df <- data.frame(
"entero" = 1:4,
"factor" = c("a", "b", "c", "d"),
"numero" = c(1.2, 3.4, 4.5, 5.6),
"cadena" = as.character(c("a", "b", "c", "d")),
"valor" = matrix(1:4)
)
mi_df <- data.frame(
"entero" = 1:4,
"factor" = c("a", "b", "c", "d"),
"numero" = c(1.2, 3.4, 4.5, 5.6),
"cadena" = as.character(c("a", "b", "c", "d")),
"valor" = matrix(1:4)
)
mi_df
mi_df <- data.frame(
"entero" = 1:4,
"factor" = c("a", "b", "c", "d"),
"numero" = c(1.2, 3.4, 4.5, 5.6),
"cadena" = as.character(c("a", "b", "c", "d")),
"valor" = matrix(1:4, nco = 2, nrow = 2)
)
mi_df
install.packages("dplyr")
install.packages("dbplyr")
install.packages("dslabs")
library(dbplyr)
library(dplyr)
library(dslabs)
murders
dim(murders)
names(murders) #regresa las columnas del dataframe
class(murders) #verifica el tipo de dato de murder
str(murders) #regresa informacion del dataframe
head(murders) #regresa los primeros elementos (6) del dataframe
tail(murders) #regresa los ultimos elementos del dataframe
dim(murders) # numero de columnas, con numero de filas
tail(murders)
summary(murders)
murders$population
murders$state
pop<-murders$population
class(pop)
length(pop)
murders
murders[25,1]
murders[2:3,]
murders[,4:5]
murders[14:17,3:4]
View(matriz)
View(matriz2)
murders
my_df<-murders
View(mi_df)
View(my_df)
record = list(name = "John Doe",
student_id = 1234,
grades = c(95,82,91,97,93),
final_grade = "A")
record
murders[murders$region == "west",]
murders[murders$region == "west", ]
my_df<-murders
my_df
class(record)
str(record)
dim(record) #lista
dim(murders)
record
class(record)
str(record)
dim(record)
dim(murders) #data frame
new_table<- select(murders, state, region,  total) # seleccionar el estado total
new_table
filter(new_table, total<=300) #filtra el campo total menor o igual a 300
x<-murders$population**6
y<-murders$total
plot(x,y)
with(murders,plot(population,total))
x<-murders$population/6
plot(x,y)
with(murders,plot(population,total))
x<-murders$population/6
y<-murders$total
plot(x,y)
with(murders,plot(population,total))
plot(x,y)
with(murders,plot(population,total))
x<-murders$population**6
y<-murders$total
plot(x,y)
x<- with(murders,total / population *1)
hist(x)
x<-murders$population / 10 **6
y<-murders$total
plot(x,y)
with(murders,plot(population,total))
plot(x,y)
x<- with(murders,total / population *1)
hist(x)
mialumna <- list(nombre = "Paty", no.materias = 3, calif.materias = c(10, 7, 9))
mialumna
mialumna$nombre #extrae el nompre de la lista
mialumna$calif.materias[1]#extrae la califica
mialumna$calif.materias[2]
mialumna$calif.materias[3]
x <- 6:8
x
y <- c("A", "B", "C")
misgrupos <- data.frame(alumnos = x, nivel = y)
str(misgrupos)
misgrupos
record = list(name = "John Doe",
student_id = 1234,
grades = c(95,82,91,97,93),
final_grade = "A")
record
install.packages(writeXLS)
install.packages(WriteXLS)
install.packages("WriteXLS")
library(WriteXLS)
library(ggplot2)
?ls()
installed.packages() #REVISA QUE PAQUETES HAY INSTALADOS
rm(list=ls())
help("rm")
Primer_valor<- sample(1:20,1)
Primer_valor
?ls()
mialumna <- list(nombre = "Paty", no.materias = 3, calif.materias = c(10, 7, 9))
mialumna
mialumna$nombre #extrae el nompre de la lista
mialumna$calif.materias[1]#extrae la calificacion 1 de la lista dentro de otra lista
x <- 6:8
x
y <- c("A", "B", "C")
y
misgrupos <- data.frame(alumnos = x, nivel = y)
str(misgrupos)
misgrupos
misgrupos[1]
misgrupos[,1]
misgrupos$nivel
mean(misgrupos$alumnos)
max(misgrupos$alumnos)
paste("La media de alumnos es:", mean(misgrupos$alumnos), " fin del ejemplo")
summary(misgrupos)
dim(misgrupos)
misgrupos$edificio <- c("10", "11", "12")
misgrupos
misgrupos$colegiatura <- c(200, 250, 300)
misgrupos
misgrupos$nivel <- NULL
misgrupos
plot(misgrupos$alumnos,misgrupos$edificio)
x<-murders$population / 10^6
murders
murders
murders
library(dslabs)
library(dbplyr)
library(dplyr)
library(dslabs)
murders
plot(misgrupos$alumnos,misgrupos$edificio)
x<-murders$population / 10^6
y<-murders$total
plot(x,y)
with(murders, plot(population,total))
x<-with(murders, total/population)
hist(x) #histograma
barplot(x,y)
a<-c(2,4,6,8,10)
b<-c(12,14,16,18,20)
barplot(a,b)
pie(a)
pie(b)
library(blob)
detach("package:blob", unload = TRUE)
mimatriz <- matrix(data=1:20, nrow=4, ncol=5, byrow=FALSE)
mimatriz
mimatriz <- matrix( nrow= , ncol=, byrow=FALSE)
mimatriz
mimatriz <- matrix( nrow=4 , ncol=,8 byrow=FALSE)
mimatriz <- matrix( nrow=3, ncol=9, byrow=FALSE)
mimatriz
matriz4<-matrix(1:45, nrow = 9, ncol= 5) # matriz de 1 a 45, 9 filas y 5 columnas
matriz4
matriz4[9,3:5]
matriz4[2:3,1:4]
matriz4[2:3,4]
matriz4[2:3,:4]
matriz4[2:3,4]
matriz4[3:5,3:5]
matriz4[9,1:5]
paste("hola","mundo", 5+6, 100-10)
for (i in 1:20) {
if(!i %% 2){ #se salta los numeros pares
next # avanza al siguiente elemento (i)
}
print(i) #imprime los numeros impares
}
while(condicion){
operaciones
}
condicion
while(base>3){
print(base)
if (base == 5){
break
}
base<-base - 1
}
base<-10
while(base>3){
print(base)
if (base == 5){
break
}
base<-base - 1
}
base
for(i in 1:6){
if(i==5){
next
}
print(i)
}
install.packages("DBI")
install.packages("RMySQL")
install.packages("mongolita")
library(DBI)
library(RMySQL)
library(mongolita)
install.packages("mongolite")
library(mongolite)
rm(list = ls())
library(readr)
library(readr)
library(dbplyr)
library(data.table)
library(dplyr)
install.packages("readr")
library(readr)
iris
getwd()
setwd("C:\Users\eveli\Documents\R\scripts")
setwd("C:/Users/eveli/Documents/R/scripts")
getwd()
write_csv(iris, path = "C:/Users/eveli/Documents/R/scripts/iris.csv")
setwd("C:/Users/eveli/Documents/R/scripts/iris.csv")
write_csv(iris, file = "C:/Users/eveli/Documents/R/scripts/iris.csv")
write_csv(iris, file = "C:/Users/eveli/Documents/R/scripts/iris2.csv")
dfIris <- read_delim("iris.csv", delim = ",")
dfIris <- read.csv("iris.csv")
dfIris
setwd("C:/Users/eveli/Documents/R/scripts")
write_csv(iris, file = "C:/Users/eveli/Documents/R/scripts/SP1.csv")
getwd()
dfIris <- read.csv("SP1.csv")
dfIris
install.packages("tidyverse")
library(tidyverse)
read.csv("SP1.csv") # El archivo csv debe estar en el directorio de trabajo.\
football.nfl <- read.csv("SP1.csv")
football.nfl <- read_delim("SP1.csv", delim=",") #read_delim es una funcion de tidyverse()
class(football.nfl )
football.nfl
head(football.nfl)
class(football.nfl )
View(football.nfl)
View(dfIris)
football.nfl
head(football.nfl)
tail(football.nfl) #despliega los ultimos registros del data set
str(football.nfl)
tail(football.nfl) #despliega los ultimos registros del data set
str(football.nfl)
class(football.nfl)
summary(football.nfl)
str(football.nfl)
str(football.nfl)
data.url <- read.csv("https://www.football-data.co.uk/mmz4281/2021/SP1.csv")
data.url
data.directorio<-read.csv("C:/Users/eveli/Documents/R/scripts/SP1.csv")
data.directorio
tail(data.url)
str(data.url)
dim(football.nfl)
names(football.nfl) #regresa el nombre de las columnas del data frame.
data_netflix<-read.csv("https://raw.githubusercontent.com/ecoronadoj/Sesion_1/main/Data/netflix_titles.csv")
data_netflix
data_netflix<-read.csv("https://raw.githubusercontent.com/ecoronadoj/Sesion_1/main/Data/netflix_titles.csv")
https://raw.githubusercontent.com/ecoronadoj/Sesion_1/main/Data/netflix_titles.csv
data_netflix<-read.csv("https://raw.githubusercontent.com/ecoronadoj/Sesion_1/main/Data/netflix_titles.csv")
data_netflix<-read.csv("https://raw.githubusercontent.com/ecoronadoj/Sesion_1/main/Data/netflix_titles.csv")
data_netflix <- read.csv(https://raw.githubusercontent.com/ecoronadoj/Sesion_1/main/Data/netflix_titles.csv)
data_netflix<-read.csv("https://raw.githubusercontent.com/ecoronadoj/Sesion_1/main/Data/netflix_titles.csv")
data_netflix<-read.csv("https://raw.githubusercontent.com/ecoronadoj/Sesion_1/main/Data/netflix_titles.csv")
data_netflix <- read.csv("https://raw.githubusercontent.com/ecoronadoj/Sesion_1/main/Data/netflix_titles.csv")
data("Titanic")
Titanic
data("murders")
murders
library(dslabs)
data("murders")
new_table<-select(murders,state,region,total)
new_table
class(new_table)
filter(new_table, total>=300)
dfMurders<-murders
dim(dfMurders)
names(dfMurders)
dfm<-select(dfMurders, total,region)
filter(dfm, region=="South")
filter(dfMurders, total>=300 & total <= 800 )
subset(data_netflix,release_year>=2015)
library(xlsx)
install.packages("XML")
library(XML)
install.packages("XLS")
install.packages("XLS")
library(XML)
write.csv(net.2015, "res.netflix4.csv", row.names=TRUE)
write.xlsx(net.2015, "res.netflix4.xlsx")
library(WriteXLS)
install.packages("XLS")
write.xlsx(net.2015, "res.netflix4.xlsx")
write_excel_csv(net.2015, "res.netflix4.xls")
write_excel_csv(net.2015, "res.netflix4.xls")
write.csv(net.2015, "res.netflix4.csv", row.names=TRUE)
net.2015<-filter(data_netflix,release_year>2015)
data_netflix<-read.csv("https://raw.githubusercontent.com/ecoronadoj/Sesion_1/main/Data/netflix_titles.csv")
data_netflix<-read.csv("https://raw.githubusercontent.com/ecoronadoj/Sesion_1/main/Data/netflix_titles.csv")
data_netflix
dim(data_netflix) #dimension
class(data_netflix) #tipo de objeto
str(data_netflix)
head(data_netflix)
names(data_netflix)
net.2015<-filter(data_netflix,release_year>2015)
net.2015 #regresa los datos filtrados
data_netflix #regresa el data frame sin filtrar
class(net.2015)
data("murders")
new_table<-select(murders,state,region,total)
new_table
class(new_table)
filter(new_table, total>=300)
install.packages("XML")
library(XML)
link <- "http://www-db.deis.unibo.it/courses/TW/DOCS/w3schools/xml/cd_catalog.xml"
class(link)
link
data_df <- xmlToDataFrame(link)
head(data_df)
data_df
tail(data_df)
nrow(data_df)
ncol(data_df)
summary(data_df)
data_df <- xmlToDataFrame(link)
head(data_df)
data_df
tail(data_df)
nrow(data_df)
write_csv(iris, file = "C:/Users/eveli/Documents/R/scripts/Dataset salary 2024.csv")
write.csv(net.2015, "Dataset salary 2024.csv", row.names=TRUE)
ejercicio <- "Dataset salary 2024.csv", header=TRUE)
ejercicio <- read.csv("Dataset salary 2024.csv", header=TRUE)
ejercicio
head(ejercicio)
View(ejercicio)
data<- mutate(data, categoria=case_when(
(edad<=18 & edad>=12)~"adolescente",
(edad<=26 & edad>=19)~"jÃ³ven",
(edad<=59 & edad>=27)~"adulto",
(edad>=60)~"adulto_mayor"))
View(football.nfl)
View(ejercicio)
ejercicio <- mutate(ejercicio, categoria = case_when(
type = "Movie" ~ "Pelicula"
))
ejercicio <- mutate(ejercicio, categoria = case_when(
type ~ "Movie" ~ "Pelicula"
))
ejercicio <- mutate(ejercicio, categoria = case_when(
type == "Movie" ~ "Pelicula"
TRUE
write_csv(iris, file = "C:/Users/eveli/Documents/R/scripts/Dataset salary 2024.csv")
ejercicio <- read.csv("Dataset salary 2024.csv", header=TRUE)
head(ejercicio)
View(ejercicio)
ejercicio <- read.csv("Dataset salary 2024.csv", header=TRUE)
View(ejercicio)
ejercicio <- read.csv("Dataset salary 2024.csv", header=TRUE)
View(ejercicio)
